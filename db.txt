# SemiGroumoa
-- TB_REGION
DROP TABLE TB_REGION CASCADE CONSTRAINTS;
CREATE TABLE TB_REGION(
       RN_CODE VARCHAR2(10) NOT NULL,
       REGION_NAME VARCHAR(12) NOT NULL,
       REGION_SPECIFIC VARCHAR(12) NOT NULL,
       
       CONSTRAINT RN_CODE_PK PRIMARY KEY (RN_CODE)
);

COMMENT ON COLUMN TB_REGION.RN_CODE IS '지역코드';
COMMENT ON COLUMN TB_REGION.REGION_NAME IS '지역명';
COMMENT ON COLUMN TB_REGION.REGION_SPECIFIC IS '지역세부입력';


-- TB_MEMBER 테이블에서 사용할 회원번호 시퀀스
DROP SEQUENCE SEQ_MEMBER;
CREATE SEQUENCE SEQ_MEMBER
       START WITH 1
       INCREMENT BY 1;

-- TB_MEMBER
DROP TABLE TB_MEMBER CASCADE CONSTRAINTS;
CREATE TABLE TB_MEMBER(
       MEMBER_CODE NUMBER NOT NULL,
       EMAIL VARCHAR2(30) NOT NULL,
       MEMBER_PWD VARCHAR(100) NOT NULL,
       MEMBER_NAME VARCHAR2(15) NOT NULL,
       GENDER CHAR NOT NULL,
       RN_CODE VARCHAR2(10) NOT NULL,
       ADDRESS VARCHAR2(60) NOT NULL,
       PHONE VARCHAR2(13) NOT NULL,
       BIRTH_DATE DATE NOT NULL,
       ENROLL_DATE DATE NOT NULL,
       STATUS CHAR NOT NULL,
       
       CONSTRAINT MEMBER_CODE_PK PRIMARY KEY (MEMBER_CODE),
       CONSTRAINT RN_CODE_FK1 FOREIGN KEY (RN_CODE) REFERENCES TB_REGION(RN_CODE),
       CONSTRAINT STATUS_CK1 CHECK (STATUS = 'Y' OR STATUS = 'N')
);

COMMENT ON COLUMN TB_MEMBER.MEMBER_CODE IS '회원코드';
COMMENT ON COLUMN TB_MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN TB_MEMBER.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN TB_MEMBER.MEMBER_NAME IS '이름';
COMMENT ON COLUMN TB_MEMBER.GENDER IS '성별';
COMMENT ON COLUMN TB_MEMBER.RN_CODE IS '지역코드';
COMMENT ON COLUMN TB_MEMBER.ADDRESS IS '주소';
COMMENT ON COLUMN TB_MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN TB_MEMBER.BIRTH_DATE IS '생년월일';
COMMENT ON COLUMN TB_MEMBER.ENROLL_DATE IS '가입일자';
COMMENT ON COLUMN TB_MEMBER.STATUS IS '상태';


-- TB_PENALTY_TYPE : 제재종류
DROP TABLE TB_PENALTY_TYPE CASCADE CONSTRAINTS;
CREATE TABLE TB_PENALTY_TYPE (
       PT_CODE VARCHAR2(10) NOT NULL,
       PT_NAME VARCHAR2(30) NOT NULL,
       
       CONSTRAINT PT_CODE_PK PRIMARY KEY (PT_CODE)
);

COMMENT ON COLUMN TB_PENALTY_TYPE.PT_CODE IS '제재종류코드';
COMMENT ON COLUMN TB_PENALTY_TYPE.PT_NAME IS '제재종류이름';


-- TB_PENALTY : 제재내역
DROP TABLE TB_PENALTY CASCADE CONSTRAINTS;
CREATE TABLE TB_PENALTY(
       PENALTY_CODE VARCHAR2(10) NOT NULL,
       PT_CODE VARCHAR2(10) NOT NULL,
       PENALTY_REASON VARCHAR2(90) NOT NULL,
       MEMBER_CODE NUMBER NOT NULL,
       PENALTY_DATE DATE NOT NULL,
       
       CONSTRAINT PENALTY_CODE_PK PRIMARY KEY (PENALTY_CODE),
       CONSTRAINT PT_CODE_FK1 FOREIGN KEY (PT_CODE) REFERENCES TB_PENALTY_TYPE(PT_CODE),
       CONSTRAINT MEMBER_CODE_FK1 FOREIGN KEY (MEMBER_CODE) REFERENCES TB_MEMBER(MEMBER_CODE)
);

COMMENT ON COLUMN TB_PENALTY.PENALTY_CODE IS '제재코드';
COMMENT ON COLUMN TB_PENALTY.PT_CODE IS '제재종류코드';
COMMENT ON COLUMN TB_PENALTY.PENALTY_CODE IS '제재사유';
COMMENT ON COLUMN TB_PENALTY.MEMBER_CODE IS '회원코드';
COMMENT ON COLUMN TB_PENALTY.PENALTY_DATE IS '제재일자';


-- TB_INTEREST 테이블에서 사용할 회원번호 시퀀스
DROP SEQUENCE SEQ_INTEREST;
CREATE SEQUENCE SEQ_INTEREST
       START WITH 1
       INCREMENT BY 1;
       
-- TB_INTEREST : 관심사
DROP TABLE TB_INTEREST CASCADE CONSTRAINTS;
CREATE TABLE TB_INTEREST(
       INTEREST_CODE VARCHAR2(10) NOT NULL,
       INTEREST VARCHAR2(30) NOT NULL,
       
       CONSTRAINT INTEREST_CODE_PK PRIMARY KEY (INTEREST_CODE)
);

COMMENT ON COLUMN TB_INTEREST.INTEREST_CODE IS '관심사코드';
COMMENT ON COLUMN TB_INTEREST.INTEREST IS '관심사명';

-- TB_MEMBER_INTEREST : 회원관심사
DROP TABLE TB_MEMBER_INTEREST CASCADE CONSTRAINTS;
CREATE TABLE TB_MEMBER_INTEREST(
       MEMBER_CODE NUMBER NOT NULL,
       INTEREST_CODE VARCHAR2(10) NOT NULL,
       
       CONSTRAINT MEMBER_CODE_FK2 FOREIGN KEY (MEMBER_CODE) REFERENCES TB_MEMBER(MEMBER_CODE),
       CONSTRAINT INTEREST_CODE_FK1 FOREIGN KEY (INTEREST_CODE) REFERENCES TB_INTEREST(INTEREST_CODE)
);

COMMENT ON COLUMN TB_MEMBER_INTEREST.MEMBER_CODE IS '회원코드';
COMMENT ON COLUMN TB_MEMBER_INTEREST.INTEREST_CODE IS '관심사코드';


-- TB_GROUP 테이블에서 사용할 회원번호 시퀀스
DROP SEQUENCE SEQ_GROUP;
CREATE SEQUENCE SEQ_GROUP
       START WITH 1
       INCREMENT BY 1;
       
-- TB_GROUP : 동호회
DROP TABLE TB_GROUP CASCADE CONSTRAINTS;
CREATE TABLE TB_GROUP(
       GROUP_CODE NUMBER NOT NULL,
       GROUP_NAME VARCHAR2(30) NOT NULL,
       GROUP_LEADER_CODE NUMBER NOT NULL,
       RN_CODE VARCHAR2(10) NOT NULL,
       INTEREST_CODE VARCHAR2(10) NOT NULL,
       OPEN_YN CHAR NOT NULL,
       NICKNAME_YN CHAR NOT NULL,
       OPEN_DATE DATE NOT NULL,
       GROUP_RULE VARCHAR2(600),
       DESCRIPTION VARCHAR2(150),
       STATUS CHAR NOT NULL,

       CONSTRAINT GROUP_CODE_PK PRIMARY KEY (GROUP_CODE),
       CONSTRAINT OPEN_YN_CK CHECK (OPEN_YN = 'Y' OR OPEN_YN = 'N'),
       CONSTRAINT NICKNAME_YN_CK CHECK (NICKNAME_YN = 'Y' OR NICKNAME_YN = 'N'),
       CONSTRAINT INTEREST_CODE_FK2 FOREIGN KEY (INTEREST_CODE) REFERENCES TB_INTEREST(INTEREST_CODE),
       CONSTRAINT RN_CODE_FK2 FOREIGN KEY (RN_CODE) REFERENCES TB_REGION(RN_CODE),
       CONSTRAINT GROUP_STATUS_CK CHECK (STATUS = 'Y' OR STATUS = 'N'),
       CONSTRAINT GROUP_LEADER_CODE_FK2 FOREIGN KEY (GROUP_LEADER_CODE) REFERENCES TB_MEMBER(MEMBER_CODE)
);

COMMENT ON COLUMN TB_GROUP.GROUP_CODE IS '동호회코드';
COMMENT ON COLUMN TB_GROUP.GROUP_NAME IS '동호회명';
COMMENT ON COLUMN TB_GROUP.RN_CODE IS '지역코드';
COMMENT ON COLUMN TB_GROUP.INTEREST_CODE IS '관심사코드';
COMMENT ON COLUMN TB_GROUP.OPEN_YN IS '공개여부';
COMMENT ON COLUMN TB_GROUP.NICKNAME_YN IS '닉네임여부';
COMMENT ON COLUMN TB_GROUP.OPEN_DATE IS '개설일자';
COMMENT ON COLUMN TB_GROUP.GROUP_RULE IS '동호회회칙';
COMMENT ON COLUMN TB_GROUP.DESCRIPTION IS '소개문구';
COMMENT ON COLUMN TB_GROUP.STATUS IS '그룹존속여부';


-- TB_SCHEDULE : 일정관리
DROP TABLE TB_SCHEDULE CASCADE CONSTRAINTS;
CREATE TABLE TB_SCHEDULE(
       SCH_CODE NUMBER NOT NULL,
       GROUP_CODE NUMBER NOT NULL,
       SCH_TITLE VARCHAR2(60) NOT NULL,
       SCH_DETAIL VARCHAR2(450) NOT NULL,
       SCH_DATE DATE NOT NULL,
       DATE_WRITTEN DATE NOT NULL,
       WRITER_CODE NUMBER NOT NULL,
--       STATUS CHAR NOT NULL,
       
       CONSTRAINT SCH_CODE_PK PRIMARY KEY (SCH_CODE),
       CONSTRAINT GROUP_CODE_FK1 FOREIGN KEY (GROUP_CODE) REFERENCES TB_GROUP(GROUP_CODE),
       CONSTRAINT WRITER_CODE_FK1 FOREIGN KEY (WRITER_CODE) REFERENCES TB_MEMBER(MEMBER_CODE)
--       CONSTRAINT STATUS_CK2 CHECK (STATUS = 'Y' OR STATUS = 'N')
);

COMMENT ON COLUMN TB_SCHEDULE.SCH_CODE IS '일정코드';
COMMENT ON COLUMN TB_SCHEDULE.GROUP_CODE IS '동호회코드';
COMMENT ON COLUMN TB_SCHEDULE.SCH_TITLE IS '이벤트이름';
COMMENT ON COLUMN TB_SCHEDULE.SCH_DETAIL IS '이벤트상세';
COMMENT ON COLUMN TB_SCHEDULE.SCH_DATE IS '이벤트날짜';
COMMENT ON COLUMN TB_SCHEDULE.DATE_WRITTEN IS '작성일자';
COMMENT ON COLUMN TB_SCHEDULE.WRITER_CODE IS '작성자코드';
--COMMENT ON COLUMN TB_SCHEDULE.STATUS IS '상태';


-- TB_SCHEDULE 테이블에서 사용할 회원번호 시퀀스
DROP SEQUENCE SEQ_SCH;
CREATE SEQUENCE SEQ_SCH
       START WITH 1
       INCREMENT BY 1;


-- TB_SCHEDULE_MEMBER : 일정멤버
DROP TABLE TB_SCHEDULE_MEMBER CASCADE CONSTRAINTS;
CREATE TABLE TB_SCHEDULE_MEMBER(
       SCH_CODE NUMBER NOT NULL,
       MEMBER_CODE NUMBER NOT NULL,
       
       CONSTRAINT SCH_CODE_FK1 FOREIGN KEY (SCH_CODE) REFERENCES TB_SCHEDULE(SCH_CODE),
       CONSTRAINT MEMBER_CODE_FK3 FOREIGN KEY (MEMBER_CODE) REFERENCES TB_MEMBER(MEMBER_CODE)
);

COMMENT ON COLUMN TB_SCHEDULE_MEMBER.SCH_CODE IS '일정코드';
COMMENT ON COLUMN TB_SCHEDULE_MEMBER.MEMBER_CODE IS '회원코드';



-- TB_FEE_LIST 테이블에서 사용할 회비내역 시퀀스
DROP SEQUENCE SEQ_FEE;
CREATE SEQUENCE SEQ_FEE
       START WITH 1
       INCREMENT BY 1;
       
-- TB_FEE_LIST : 회비내역
DROP TABLE TB_FEE_LIST CASCADE CONSTRAINTS;
CREATE TABLE TB_FEE_LIST(
       FEE_CODE NUMBER NOT NULL,
       GROUP_CODE NUMBER NOT NULL,
       MEMBER_CODE NUMBER,
       FEE_CATEGORY VARCHAR2(6) NOT NULL,
       FEE NUMBER NOT NULL,
       DETAIL VARCHAR2(75),
       FEE_DATE DATE NOT NULL,
       
       CONSTRAINT GROUP_CODE_FK2 FOREIGN KEY (GROUP_CODE) REFERENCES TB_GROUP(GROUP_CODE),
       CONSTRAINT MEMBER_CODE_FEELIST_FK FOREIGN KEY (MEMBER_CODE) REFERENCES TB_MEMBER(MEMBER_CODE),
       CONSTRAINT FEE_CATEGORY_CK CHECK (FEE_CATEGORY = '입금' OR FEE_CATEGORY = '출금')
);

COMMENT ON COLUMN TB_FEE_LIST.GROUP_CODE IS '동호회코드';
COMMENT ON COLUMN TB_FEE_LIST.MEMBER_CODE IS '멤버코드';
COMMENT ON COLUMN TB_FEE_LIST.FEE_CATEGORY IS '입출금구분';
COMMENT ON COLUMN TB_FEE_LIST.FEE IS '금액';
COMMENT ON COLUMN TB_FEE_LIST.DETAIL IS '상세내용';
COMMENT ON COLUMN TB_FEE_LIST.FEE_DATE IS '납입일자';


-- TB_GROUP_MEMBER : 동호회멤버
DROP TABLE TB_GROUP_MEMBER CASCADE CONSTRAINTS;
CREATE TABLE TB_GROUP_MEMBER(
       MEMBER_CODE NUMBER NOT NULL,
       GROUP_CODE NUMBER NOT NULL,
      

       CONSTRAINT GROUP_CODE_FK3 FOREIGN KEY (GROUP_CODE) REFERENCES TB_GROUP(GROUP_CODE),
       CONSTRAINT MEMBER_CODE_FK4 FOREIGN KEY (MEMBER_CODE) REFERENCES TB_MEMBER(MEMBER_CODE)
       
);


COMMENT ON COLUMN TB_GROUP_MEMBER.MEMBER_CODE IS '회원코드';
COMMENT ON COLUMN TB_GROUP_MEMBER.GROUP_CODE IS '동호회코드';


-- TB_ADVERTISE : 광고내역
DROP TABLE TB_ADVERTISE CASCADE CONSTRAINTS;
CREATE TABLE TB_ADVERTISE(
       AD_CODE VARCHAR2(10) NOT NULL,
       GROUP_CODE NUMBER NOT NULL,
       AD_PAY NUMBER NOT NULL,
       AD_DATE DATE NOT NULL,
       
       CONSTRAINT AD_CODE_PK PRIMARY KEY (AD_CODE),
       CONSTRAINT GROUP_CODE_FK4 FOREIGN KEY (GROUP_CODE) REFERENCES TB_GROUP(GROUP_CODE)
);

COMMENT ON COLUMN TB_ADVERTISE.AD_CODE IS '광고코드';
COMMENT ON COLUMN TB_ADVERTISE.GROUP_CODE IS '동호회코드';
COMMENT ON COLUMN TB_ADVERTISE.AD_PAY IS '비용';
COMMENT ON COLUMN TB_ADVERTISE.AD_DATE IS '결제일시';


-- TB_GROUP_DIS_LIST : 해산내역
DROP TABLE TB_GROUP_DIS_LIST CASCADE CONSTRAINTS;
CREATE TABLE TB_GROUP_DIS_LIST(
       DISLIST_CODE VARCHAR2(10) NOT NULL,
       DIS_REASON VARCHAR2(30) NOT NULL,
       DIS_DETAIL VARCHAR2(150) NOT NULL,
       DIS_DATE DATE NOT NULL,
       GROUP_CODE NUMBER NOT NULL,
       VOTE_PERSON NUMBER,
       AGREE_PERSON NUMBER,
       
       CONSTRAINT GROUP_CODE_FK5 FOREIGN KEY (GROUP_CODE) REFERENCES TB_GROUP(GROUP_CODE),
       CONSTRAINT DISLIST_CODE_PK PRIMARY KEY (DISLIST_CODE)
);

COMMENT ON COLUMN TB_GROUP_DIS_LIST.DISLIST_CODE IS '해산내역코드';
COMMENT ON COLUMN TB_GROUP_DIS_LIST.DIS_REASON IS '해산사유';
COMMENT ON COLUMN TB_GROUP_DIS_LIST.DIS_DETAIL IS '해산상세사유';
COMMENT ON COLUMN TB_GROUP_DIS_LIST.DIS_DATE IS '해산일';
COMMENT ON COLUMN TB_GROUP_DIS_LIST.GROUP_CODE IS '동호회코드';
COMMENT ON COLUMN TB_GROUP_DIS_LIST.VOTE_PERSON IS '투표인원';
COMMENT ON COLUMN TB_GROUP_DIS_LIST.AGREE_PERSON IS '찬성인원';


-- TB_POST_CATEGORY : 게시글분류
DROP TABLE TB_POST_CATEGORY CASCADE CONSTRAINTS;
CREATE TABLE TB_POST_CATEGORY(
       CATEGORY_CODE VARCHAR2(10) NOT NULL,
       CATEGORY_NAME VARCHAR2(30) NOT NULL,
       
       CONSTRAINT CATEGORY_CODE_PK PRIMARY KEY (CATEGORY_CODE)
);

COMMENT ON COLUMN TB_POST_CATEGORY.CATEGORY_CODE IS '분류코드';
COMMENT ON COLUMN TB_POST_CATEGORY.CATEGORY_NAME IS '분류명';


-- TB_POST : 게시글
DROP TABLE TB_POST CASCADE CONSTRAINTS;
CREATE TABLE TB_POST(
       POST_CODE NUMBER NOT NULL,
       CATEGORY_CODE VARCHAR2(10) NOT NULL,
       GROUP_CODE NUMBER NOT NULL,
       WRITER_CODE NUMBER NOT NULL,
       TITLE VARCHAR2(60) NOT NULL,
       DETAIL VARCHAR2(3000),
       POST_DATE DATE NOT NULL,
       PCOUNT NUMBER NOT NULL,
       STATUS CHAR NOT NULL,
       
       CONSTRAINT POST_CODE_PK PRIMARY KEY (POST_CODE),
       CONSTRAINT CATEGORY_CODE_FK FOREIGN KEY (CATEGORY_CODE) REFERENCES TB_POST_CATEGORY(CATEGORY_CODE),
       CONSTRAINT GROUP_CODE_FK6 FOREIGN KEY (GROUP_CODE) REFERENCES TB_GROUP(GROUP_CODE),
       CONSTRAINT WRITER_CODE_FK2 FOREIGN KEY (WRITER_CODE) REFERENCES TB_MEMBER(MEMBER_CODE),
       CONSTRAINT POST_STATUS_CK CHECK (STATUS = 'Y' OR STATUS = 'N')
);

COMMENT ON COLUMN TB_POST.POST_CODE IS '게시글코드';
COMMENT ON COLUMN TB_POST.CATEGORY_CODE IS '동호회코드';
COMMENT ON COLUMN TB_POST.GROUP_CODE IS '분류코드';
COMMENT ON COLUMN TB_POST.WRITER_CODE IS '작성자코드';
COMMENT ON COLUMN TB_POST.TITLE IS '제목';
COMMENT ON COLUMN TB_POST.DETAIL IS '내용';
COMMENT ON COLUMN TB_POST.POST_DATE IS '작성날짜';
COMMENT ON COLUMN TB_POST.PCOUNT IS '게시글조회수';
COMMENT ON COLUMN TB_POST.STATUS IS '게시글존속여부';


-- TB_POST_REPLY : 게시글댓글
DROP TABLE TB_POST_REPLY CASCADE CONSTRAINTS;
CREATE TABLE TB_POST_REPLY(
       REPLY_CODE NUMBER NOT NULL,
       POST_CODE NUMBER NOT NULL,
       WRITER_CODE NUMBER NOT NULL,
       REPLY_DETAIL VARCHAR2(600) NOT NULL,
       REPLY_DATE DATE NOT NULL,
       
       CONSTRAINT REPLY_CODE_PK PRIMARY KEY (REPLY_CODE),
       CONSTRAINT POST_CODE_FK1 FOREIGN KEY (POST_CODE) REFERENCES TB_POST(POST_CODE),
       CONSTRAINT WRITER_CODE_FK3 FOREIGN KEY (WRITER_CODE) REFERENCES TB_MEMBER(MEMBER_CODE)
);

COMMENT ON COLUMN TB_POST_REPLY.REPLY_CODE IS '댓글코드';
COMMENT ON COLUMN TB_POST_REPLY.POST_CODE IS '게시글코드';
COMMENT ON COLUMN TB_POST_REPLY.WRITER_CODE IS '작성자코드';
COMMENT ON COLUMN TB_POST_REPLY.REPLY_DETAIL IS '내용';
COMMENT ON COLUMN TB_POST_REPLY.REPLY_DATE IS '작성일자';


-- TB_PRODUCT : 상품목록
DROP TABLE TB_PRODUCT CASCADE CONSTRAINTS;
CREATE TABLE TB_PRODUCT(
       PRODUCT_CODE VARCHAR2(10) NOT NULL,
       PRODUCT_DETAIL VARCHAR(30) NOT NULL,
       PRODUCT_PRICE NUMBER NOT NULL,
       PRODUCT_TERMS VARCHAR2(3000) NOT NULL,
       
       CONSTRAINT PRODUCT_CODE_PK PRIMARY KEY (PRODUCT_CODE)
);

COMMENT ON COLUMN TB_PRODUCT.PRODUCT_CODE IS '상품코드';
COMMENT ON COLUMN TB_PRODUCT.PRODUCT_DETAIL IS '상품내용';
COMMENT ON COLUMN TB_PRODUCT.PRODUCT_PRICE IS '상품가격';
COMMENT ON COLUMN TB_PRODUCT.PRODUCT_TERMS IS '상품결제약관';


-- TB_PRODUCT_BOUGHT : 결제내역
DROP TABLE TB_PRODUCT_BOUGHT CASCADE CONSTRAINTS;
CREATE TABLE TB_PRODUCT_BOUGHT(
       PB_CODE VARCHAR2(50) NOT NULL,
       GROUP_CODE NUMBER NOT NULL,
       PB_DATE DATE NOT NULL,
       PRODUCT_CODE VARCHAR2(10) NOT NULL,
       PAYER_CODE NUMBER NOT NULL,
       REFUND_AVAILABLE_DATE DATE NOT NULL,
       
       CONSTRAINT PB_CODE_PK PRIMARY KEY (PB_CODE),
       CONSTRAINT GROUP_CODE_FK7 FOREIGN KEY (GROUP_CODE) REFERENCES TB_GROUP(GROUP_CODE),
       CONSTRAINT PRODUCT_CODE_FK1 FOREIGN KEY (PRODUCT_CODE) REFERENCES TB_PRODUCT(PRODUCT_CODE),
       CONSTRAINT PAYER_CODE_FK FOREIGN KEY (PAYER_CODE) REFERENCES TB_MEMBER(MEMBER_CODE)
);

COMMENT ON COLUMN TB_PRODUCT_BOUGHT.PB_CODE IS '결제코드';
COMMENT ON COLUMN TB_PRODUCT_BOUGHT.GROUP_CODE IS '동호회코드';
COMMENT ON COLUMN TB_PRODUCT_BOUGHT.PB_DATE IS '결제날짜';
COMMENT ON COLUMN TB_PRODUCT_BOUGHT.PRODUCT_CODE IS '상품코드';
COMMENT ON COLUMN TB_PRODUCT_BOUGHT.PAYER_CODE IS '결제자코드';
COMMENT ON COLUMN TB_PRODUCT_BOUGHT.REFUND_AVAILABLE_DATE IS '환불가능일자';


-- TB_REFUND : 환불내역
DROP TABLE TB_REFUND CASCADE CONSTRAINTS;
CREATE TABLE TB_REFUND(
       PB_CODE VARCHAR2(10) NOT NULL,
       REFUND_DATE DATE NOT NULL,
       REFUND_REASON VARCHAR2(45) NOT NULL,
       REFEUND_SPEC_REASON VARCHAR2(150),
       
       CONSTRAINT PB_CODE_FK1 FOREIGN KEY (PB_CODE) REFERENCES TB_PRODUCT_BOUGHT(PB_CODE)
);

COMMENT ON COLUMN TB_REFUND.PB_CODE IS '결제코드';
COMMENT ON COLUMN TB_REFUND.REFUND_DATE IS '환불일시';
COMMENT ON COLUMN TB_REFUND.REFUND_REASON IS '환불사유';
COMMENT ON COLUMN TB_REFUND.REFEUND_SPEC_REASON IS '환불상세사유';


-- TB_QNA_CATEGORY : 문의사항분류
DROP TABLE TB_QNA_CATEGORY CASCADE CONSTRAINTS;
CREATE TABLE TB_QNA_CATEGORY(
       QNA_CATE_CODE VARCHAR2(10) NOT NULL,
       QNA_CATE_NAME VARCHAR2(30) NOT NULL,
       
       CONSTRAINT QNA_CATE_CODE_PK PRIMARY KEY (QNA_CATE_CODE)
);

COMMENT ON COLUMN TB_QNA_CATEGORY.QNA_CATE_CODE IS '문의사항분류코드';
COMMENT ON COLUMN TB_QNA_CATEGORY.QNA_CATE_NAME IS '문의사항분류명';


-- TB_MANAGER : 관리자
DROP TABLE TB_MANAGER CASCADE CONSTRAINTS;
CREATE TABLE TB_MANAGER(
       MANAGER_CODE VARCHAR2(10) NOT NULL,
       MANAGER_NAME VARCHAR2(15) NOT NULL,
       MANAGER_ID VARCHAR2(10) NOT NULL,
       MANAGER_PWD VARCHAR2(12) NOT NULL,

       CONSTRAINT MANAGER_CODE_PK PRIMARY KEY (MANAGER_CODE)
);

COMMENT ON COLUMN TB_MANAGER.MANAGER_CODE IS '관리자코드';
COMMENT ON COLUMN TB_MANAGER.MANAGER_NAME IS '관리자명';
COMMENT ON COLUMN TB_MANAGER.MANAGER_ID IS '관리자아이디';
COMMENT ON COLUMN TB_MANAGER.MANAGER_PWD IS '관리자비밀번호';


-- TB_QNA에서 사용할 시퀀스
DROP SEQUENCE SEQ_QNA;
CREATE SEQUENCE SEQ_QNA
       START WITH 1
       INCREMENT BY 1;
       
-- TB_QNA : 문의사항
DROP TABLE TB_QNA CASCADE CONSTRAINTS;
CREATE TABLE TB_QNA (
       QNA_CODE VARCHAR2(10) NOT NULL,
       QUESTIONER_CODE NUMBER NOT NULL,
       QNA_CATE_CODE VARCHAR2(10) NOT NULL,
       QNA_TITLE VARCHAR2(60) NOT NULL,
       QNA_DETAIL VARCHAR2(750) NOT NULL,
       QNA_DATE DATE NOT NULL,
       QNA_REPLY VARCHAR2(1000),
       REPLIER_CODE VARCHAR2(10),
       ISANSWERED VARCHAR2(2) NOT NULL,
       
       CONSTRAINT QNA_CODE_PK PRIMARY KEY (QNA_CODE),
       CONSTRAINT QUESTIONER_CODE_FK FOREIGN KEY (QUESTIONER_CODE) REFERENCES TB_MEMBER(MEMBER_CODE),
       CONSTRAINT REPLIER_CODE_FK FOREIGN KEY (REPLIER_CODE) REFERENCES TB_MANAGER(MANAGER_CODE),
       CONSTRAINT ISANSWERED_CK CHECK (ISANSWERED = 'Y' OR ISANSWERED = 'N')
);

COMMENT ON COLUMN TB_QNA.QNA_CODE IS '질답코드';
COMMENT ON COLUMN TB_QNA.QUESTIONER_CODE IS '질문자코드';
COMMENT ON COLUMN TB_QNA.QNA_CATE_CODE IS '분류코드';
COMMENT ON COLUMN TB_QNA.QNA_TITLE IS '문의제목';
COMMENT ON COLUMN TB_QNA.QNA_DETAIL IS '문의내용';
COMMENT ON COLUMN TB_QNA.QNA_DATE IS '문의작성일';
COMMENT ON COLUMN TB_QNA.QNA_REPLY IS '답변';
COMMENT ON COLUMN TB_QNA.REPLIER_CODE IS '답변자코드';
COMMENT ON COLUMN TB_QNA.ISANSWERED IS '답변확인여부';


-- TB_NOTICE 테이블에서 사용할 공지사항 시퀀스
DROP SEQUENCE SEQ_NOTICE;
CREATE SEQUENCE SEQ_NOTICE
       START WITH 1
       INCREMENT BY 1;

-- TB_NOTICE : 공지사항
DROP TABLE TB_NOTICE CASCADE CONSTRAINTS;
CREATE TABLE TB_NOTICE(
       NOTICE_CODE VARCHAR2(10) NOT NULL,
       NOTICE_CATEGORY VARCHAR2(30) NOT NULL,
       NOTICE_TITLE VARCHAR2(60) NOT NULL,
       NOTICE_DETAIL VARCHAR2(3000) NOT NULL,
       NOTICE_DATE DATE NOT NULL,
       MN_WRITER_CODE VARCHAR2(10) NOT NULL,
       NOTICE_STATUS CHAR NOT NULL,
       
       CONSTRAINT NOTICE_CODE_PK PRIMARY KEY(NOTICE_CODE),
       CONSTRAINT MN_WRITER_CODE_FK FOREIGN KEY (MN_WRITER_CODE) REFERENCES TB_MANAGER(MANAGER_CODE),
       CONSTRAINT NOTICE_STATUS_CK CHECK (NOTICE_STATUS = 'Y' OR NOTICE_STATUS = 'N')
);

COMMENT ON COLUMN TB_NOTICE.NOTICE_CODE IS '공지사항코드';
COMMENT ON COLUMN TB_NOTICE.NOTICE_CATEGORY IS '공지분류';
COMMENT ON COLUMN TB_NOTICE.NOTICE_TITLE IS '공지제목';
COMMENT ON COLUMN TB_NOTICE.NOTICE_DETAIL IS '공지내용';
COMMENT ON COLUMN TB_NOTICE.NOTICE_DATE IS '공지작성일';
COMMENT ON COLUMN TB_NOTICE.MN_WRITER_CODE IS '공지게시자코드';
COMMENT ON COLUMN TB_NOTICE.NOTICE_STATUS IS '공지존속여부';



-- TB_ATTACHMENT 테이블에서 사용할 FID 시퀀스
DROP SEQUENCE SEQ_FID;
CREATE SEQUENCE SEQ_FID
       START WITH 1
       INCREMENT BY 1;

---- TB_ATTACHMENT : 첨부파일
DROP TABLE TB_ATTACHMENT CASCADE CONSTRAINTS;
CREATE TABLE TB_ATTACHMENT(
       FID VARCHAR2(20) NOT NULL,
       ORIGIN_NAME VARCHAR2(50) NOT NULL,
       CHANGE_NAME VARCHAR2 (50) NOT NULL,
       FILE_PATH VARCHAR2 (100) NOT NULL,
       UPLOAD_DATE DATE NOT NULL,
       FILE_LEVEL NUMBER NOT NULL,
       STATUS CHAR NOT NULL,
       GROUP_CODE NUMBER, 
       NOTICE_CODE VARCHAR2(10),
       QNA_CODE VARCHAR2(10),
       POST_CODE NUMBER,
       REPORT_CODE VARCHAR2(10),
       
       CONSTRAINT FID_PK PRIMARY KEY(FID),
       CONSTRAINT GROUP_FK FOREIGN KEY (GROUP_CODE) REFERENCES TB_GROUP(GROUP_CODE),
       CONSTRAINT NOTICE_FK FOREIGN KEY (NOTICE_CODE) REFERENCES TB_NOTICE(NOTICE_CODE),
       CONSTRAINT QNA_FK FOREIGN KEY (QNA_CODE) REFERENCES TB_QNA(QNA_CODE),
       CONSTRAINT POST_FK FOREIGN KEY (POST_CODE) REFERENCES TB_POST(POST_CODE),
       CONSTRAINT REPORT_FK FOREIGN KEY (REPORT_CODE) REFERENCES TB_REPORT(REPORT_CODE)
);

DROP TABLE TB_REPORT_CATEGORY CASCADE CONSTRAINTS;
CREATE TABLE TB_REPORT_CATEGORY(
       REPORT_CATEGORY_CODE VARCHAR2(30) NOT NULL,
       REPORT_CATEGORY_NAME VARCHAR2(30) NOT NULL,
       
       CONSTRAINT REPORT_CATEGORY_CODE_PK PRIMARY KEY (REPORT_CATEGORY_CODE)
);

DROP TABLE TB_REPORT CASCADE CONSTRAINTS;
CREATE TABLE TB_REPORT(
       REPORT_CODE VARCHAR2(10) NOT NULL,
       REPORTER NUMBER NOT NULL,
       REPORTED NUMBER NOT NULL,
       REPORT_CATEGORY VARCHAR2(30) NOT NULL,
       REPORT_DATE DATE NOT NULL,
       REPORT_TITLE VARCHAR2(60) NOT NULL,
       REPORT_DETAIL VARCHAR2(3000) NOT NULL,
       ISDEALT CHAR NOT NULL,
       
       CONSTRAINT REPORT_CODE_PK PRIMARY KEY(REPORT_CODE),
       CONSTRAINT REPORTER_FK FOREIGN KEY (REPORTER) REFERENCES TB_MEMBER(MEMBER_CODE),
       CONSTRAINT REPORTED_FK FOREIGN KEY (REPORTED) REFERENCES TB_MEMBER(MEMBER_CODE),
       CONSTRAINT ISDEALT_CK CHECK (ISDEALT= 'Y' OR ISDEALT= 'N')
);
